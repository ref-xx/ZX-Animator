; ZXA player v0.1
; by Arda Erdikmen
; sorry the comments are mixed language :D
; this will play ZXA files generated by ZX animator
; you need compile this file for every new zxa
; use pasmo to compile
; pasmo -v --tapbas zxa-animator128.asm animation_out.tap

; Creative Commons Attribution-NonCommercial 4.0 International Public License https://creativecommons.org/licenses/by-nc/4.0/legalcode



org 24576    ;#6000
;first copy image into screen


;IM2 ayarla

;sadece zamanlama için kullanmak isterseniz
;interrupt servis rutini bu þekilde kurabilirsiniz
;interrupt olduðunda ret ile hemen geri dönülür
;bu durumda HALT bittiði gibi program devam eder

di                      ;IM2 tuhaf biþey, suyunun suyu þeklindeçalýþýyor.
ld hl,65021             ; bu adrese tek bir komut:
ld (hl),201             ; 201=ret
ld   hl,65024           ; ram'in bu kýsmýný dolduracaðýz
ld   de,65025           ; doldurduðumuz þey interrupt vektörünün diðer kýsmý
ld   (hl),253           ; 253=FD
ld   b,e                ; e=#01 BC=#0101=257
ld   c,e                ; 257 tane FD, ofset nereye denk gelirse gelsin 16bit adres FDFD olacak.
ldir                    ; doldur!

ld   a,254              ; bu interrupt vektörü'nün diðer yarýsý,
ld   i,a                ; 254 Ula Snow oluþturmaz, tüm modellere uygundur
im   2                  ; interrupt mode 2

;interrupt hazir

ld a,0
out (254),a           ;border siyah olsun

LD hl,START           ;bitmap'i kopyala
LD de,16384
ld bc, 6912
LDIR
ld (startofframes),hl  ;loop yapabilmek için buna donmek gerekecek

mainloop:
ei
halt
di
writeBytes:
ld a,255               ;yeni frame, degisiklikler 3'er byte. 2byte adres, 1 byte data
ld d,(hl)
cp d                   ;l=255 bu durumda bir emir geliyor
JR z,checkSignal

                       ;no signal, continue
inc hl                 ;move offset
ld e,(hl)              ;load lower byte
inc hl
ld a,(hl)              ;load data byte
ld (de),a              ;write to screen
inc hl                 ;next index
jr writeBytes

checkSignal:
;ilk byte 255, birsey oldu
inc hl                 ;move offset
ld e,(hl)              ;load hi byte
inc hl
ld b,(hl)
inc hl                 ;ignore 3rd byte
cp e                   ;test 2nd byte 255=end of frame
JR z,nextframe
dec a
cp e                   ; 254=end of bitmap, and start of attribs
jr z, writeBytes      ;just keep going
dec a
cp e                   ; 253=end of data!
jr z, loopanim        ; reset offsets

;nothing matched. ERROR!
ld a,2
out (254),a             ; red border
di
halt
;END OF PROGRAM

nextframe:
xor a
cp b
jr z, mainloop          ;no waiting

waitloop:
ei
halt                    ;wait 1
dec b
jr nz,waitloop
jr mainloop

loopanim:
ld hl,(startofframes)
jr mainloop


startofframes  DEFW 0

START:

incbin "01.zxa"



end 24576


